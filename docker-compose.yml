version: "3.8"

services:
  booking-hotels-service:
    build:
      context: ./booking-hotels-service
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - EUREKA_HOST=eureka-server
      - POSTGRES_HOST=postgres
    ports:
      - "8180:8180"

  user-service:
    build:
      context: ./user-service
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
    ports:
      - "8073:8073"

  statistic-service:
    build:
      context: ./statistic-service
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - EUREKA_HOST=eureka-server
    ports:
      - "8181:8181"

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8071:8071"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - ENCRYPT_KEY=IMSYMMETRIC

  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "8070:8070"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071

  gateway-server:
    build: ./gateway-server
    ports:
      - "8072:8072"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071

  postgres:
    image: postgres:16.3
    container_name: postgres
    environment:
      POSTGRES_DB: booking_hotels
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  keycloak:
    image: keycloak/keycloak
    container_name: keycloak
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_URL_HOST: keycloak-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloakdb
      KC_DB_USERNAME: keycloakuser
      KC_DB_PASSWORD: keycloakpass
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminpass
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json

  keycloak-postgres:
    image: postgres:16.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: keycloak-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: keycloakdb
      POSTGRES_USER: keycloakuser
      POSTGRES_PASSWORD: keycloakpass

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "statistic:1:1"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db

volumes:
  postgres_data:
    driver: local
  mongodb_data: